FROM ubuntu:16.04

MAINTAINER Kamil Foltynski "kamil.foltynski@contractors.roche.com"

RUN apt-get update && apt-get install -y \
    wget \
    procps \
    sudo \
    libcurl4-openssl-dev

## --------- Install R
ARG R_VERSION
ARG BUILD_DATE
ENV BUILD_DATE ${BUILD_DATE:-2018-03-15}
ENV R_VERSION=${R_VERSION:-3.4.3}

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    apt-utils \
    zlib1g-dev \
    libbz2-dev \
    gfortran \
    gcc \
    g++ \
    liblzma-dev \
    libpcre3-dev \
    ## others from rocker
    libcairo2-dev \
    libcurl4-openssl-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libicu-dev \
    libpcre3-dev \
    libpng-dev \
    libreadline-dev \
    libtiff5-dev \
    liblzma-dev \
    libx11-dev \
    libxt-dev \
    perl \
    tcl8.6-dev \
    tk8.6-dev \
    xauth \
    xfonts-base 
    
    
RUN cd /tmp && \
    wget --no-check-certificate https://cran.r-project.org/src/base/R-3/R-$R_VERSION.tar.gz && \
    tar -xvzf R-$R_VERSION.tar.gz && \
    cd R-$R_VERSION && \
    ./configure --enable-R-shlib \
               --enable-memory-profiling \
               --with-readline \
               --with-blas \
               --with-tcltk \
               --disable-nls \
               --with-recommended-packages && \
    make -j8 && \
    make install && \
    rm -rf /tmp/*

## Add a default CRAN mirror
RUN echo "options(repos = c(CRAN = 'https://cran.rstudio.com/'), download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site \
  ## Add a library directory (for user-installed packages)
  && mkdir -p /usr/local/lib/R/site-library \
  && chown root:staff /usr/local/lib/R/site-library \
  && chmod g+wx /usr/local/lib/R/site-library \
  ## Fix library path
  && echo "R_LIBS_USER='/usr/local/lib/R/site-library'" >> /usr/local/lib/R/etc/Renviron \
  && echo "R_LIBS=\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}" >> /usr/local/lib/R/etc/Renviron \
  ## install packages from date-locked MRAN snapshot of CRAN
  && [ -z "$BUILD_DATE" ] && BUILD_DATE=$(TZ="America/Los_Angeles" date -I) || true \
  && MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE} \
  && echo MRAN=$MRAN >> /etc/environment \
  && export MRAN=$MRAN \
  && echo "options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl')" >> /usr/local/lib/R/etc/Rprofile.site

## Shiny Server PRO
RUN apt-get update && apt-get install -y \
    gdebi-core

RUN cd /tmp && \
    wget https://s3.amazonaws.com/rstudio-shiny-server-pro-build/ubuntu-14.04/x86_64/shiny-server-commercial-1.5.9.988-amd64.deb && \
    echo "y" | gdebi shiny-server-commercial-1.5.9.988-amd64.deb && \
    rm -rf /tmp/*

## supervisord
RUN apt-get update -y && apt-get install -y \
    openssl \
    supervisor \
    passwd

COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN mkdir -p /var/log/supervisor && chmod 777 -R /var/log/supervisor
COPY run_supervisord.sh /opt/bin/run_supervisord.sh
ENTRYPOINT ["bash", "/opt/bin/run_supervisord.sh"]

EXPOSE 3838 4151

# Administrative dashboard is running on port 4151
# set password for admin user
RUN echo "admin" | /opt/shiny-server/bin/sspasswd /etc/shiny-server/passwd admin

## Set up S6 init system
RUN wget -P /tmp/ https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz && \
    tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && \
    rm -rf /tmp/https://github.com/just-containers/s6-overlay/releases/download/v1.11.0.1/s6-overlay-amd64.tar.gz
  
CMD ["/init"]

## Install R packages

COPY install_dependencies.R /tmp/install_dependencies.R
RUN R -f /tmp/install_dependencies.R && \
    rm -rf /tmp/*

COPY app.R /srv/shiny-server/testapp/app.R

## activate shiny server pro

ARG SHINY_PRO_KEY

RUN [ ! -z "$SHINY_PRO_KEY" ] && \
    /opt/shiny-server/bin/license-manager activate ${SHINY_PRO_KEY}

